{"version":3,"sources":["components/TopBar.jsx","components/About.jsx","components/Contact.jsx","components/Policy.jsx","actions/userAction.js","components/NavBar.jsx","actions/pizzaAction.js","actions/inventoryAction.js","actions/cartAction.js","components/Pizza.jsx","screens/HomeScreen.jsx","components/Checkout.jsx","actions/orderAction.js","screens/CartScreen.jsx","screens/RegisterScreen.jsx","screens/LoginScreen.jsx","screens/OrdersScreen.jsx","components/Loader.jsx","components/Error.jsx","components/Success.jsx","components/Admin/AddNewPizza.jsx","components/Admin/OrderList.jsx","components/Admin/Pizzaslist.jsx","components/Admin/Userlist.jsx","components/Admin/EditPizza.jsx","components/Admin/Inventory.jsx","screens/AdminScreen.jsx","screens/CustomScreen.jsx","screens/ResetScreen.jsx","App.js","store.js","reducers/pizzaReducer.js","reducers/cartReducer.js","reducers/userReducer.js","reducers/orderReducer.js","reducers/inventoryReducer.js","reducers/mailReducer.js","index.js"],"names":["TopBar","Navbar","bg","variant","expand","Container","fluid","className","Nav","to","activeClassName","Link","About","Contact","Policy","registerUser","user","dispatch","a","type","axios","post","response","payload","window","location","href","NavBar","useDispatch","cartState","useSelector","state","cartReducer","currentUser","loginReducer","collapseOnSelect","Brand","src","style","height","alt","Toggle","Collapse","id","NavDropdown","title","name","Item","onClick","console","log","localStorage","removeItem","cartItems","length","getAllPizzas","get","data","getPizzaById","pizzaId","getAllStock","addToCart","pizza","quantity","increment","getState","cartItem","_id","image","Number","prices","price","description","ingredients","stockobject","base","sauce","cheese","veggies","qty","alert","setItem","JSON","stringify","Pizza","pobj","useState","setVariant","setQuantity","show","setShow","Card","width","Img","Body","Title","Text","Row","Col","md","onChange","e","target","value","variants","map","Array","keys","i","Button","Modal","onHide","Header","closeButton","Footer","HomeScreen","useEffect","pizzastate","getAllPizzasReducer","pizzas","loading","error","marginBottom","marginTop","Checkout","subTotal","orderHandler","razorpay_payment_id","loginState","order","email","userId","orderItems","orderAmount","isDelivered","transactionId","stock","getAllStockReducer","s","obj","varqty","j","Object","mailobj","subject","text","createOrder","Razorpay","useRazorpay","options","key","amount","currency","handler","res","prefill","contact","notes","theme","color","open","CartScreen","reduce","x","item","backgroundColor","margin","padding","cursor","RegisterScreen","setName","setEmail","password","setPassword","confirmpassword","setConfirmPassword","exists","setExists","checked","setChecked","OTP","setOTP","verified","setVerified","matched","setMatched","registerHandler","registerReducer","success","reqobj","Math","floor","random","toString","OTPobj","OTPMatcher","Form","Group","controlId","Label","Control","placeholder","textAlign","LoginScreen","loginUser","OrdersScreen","orders","myOrdersReducer","Loader","Spinner","animation","Error","Alert","Success","AddNewPizza","setname","smallPrice","setsmallPrice","largprice","setlargprice","mediumPrice","setmediumPrice","setimage","setdescription","category","setcategory","addPizzaState","addPizzaReducer","onSubmit","preventDefault","addPizza","small","medium","larg","as","ttype","OrderList","allOrdersState","allUserOrdersReducer","Table","striped","bordered","hover","createdAt","orderid","Pizzaslist","Userlist","userState","getAllUsersReducer","users","userid","reload","EditPizza","match","largeprice","setlargeprice","getPizzaByState","getPizzaByIdReducer","updateloading","updatePizzaByIdReducer","params","updatedPizza","large","updatePizza","parseInt","Inventory","AdminScreen","history","getItem","isAdmin","ButtonGroup","vertical","minHeight","push","path","component","exact","CustomScreen","loadings","stockstate","setBase","setSauce","setCheese","setVeggies","tprice","ResetScreen","OTPHandler","App","rootReducer","combineReducers","action","alreadyexists","find","filter","placeOrderReducer","updatesuccess","updateerror","mailerReducer","initialstate","parse","middleware","thunk","store","configureStore","reducer","preloadedState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74e2103c.chunk.js","sourcesContent":["import React from 'react'\nimport {Navbar, Nav, Container} from 'react-bootstrap'\nimport {LinkContainer} from 'react-router-bootstrap'\nimport {MdLocalOffer} from 'react-icons/md'\n\nconst TopBar = () => {\n  return (\n    <>\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <Container fluid>\n                <h6 className='text-light'>\n                <MdLocalOffer className='text-warning'/>&nbsp;&nbsp;\n                    50% off on orders above Rs 500/-\n                </h6>\n                <Nav className=\"ms-auto\">\n                    <LinkContainer to=\"/\" activeClassName>\n                        <Nav.Link>Home</Nav.Link>\n                    </LinkContainer>\n                    <LinkContainer to=\"/about\" activeClassName>\n                        <Nav.Link>About</Nav.Link>\n                    </LinkContainer>\n                    <LinkContainer to=\"/contact\" activeClassName>\n                        <Nav.Link>Contact Us</Nav.Link>\n                    </LinkContainer>\n                    <LinkContainer to=\"/policy\" activeClassName>\n                        <Nav.Link>Terms and Policy</Nav.Link>\n                    </LinkContainer>\n                </Nav>\n            </Container>\n        </Navbar>\n    </>\n  )\n}\n\nexport default TopBar","import React from 'react'\n\nconst About = () => {\n  return (\n    <>\n        <h1>About us page</h1>\n\n    </>\n  )\n}\n\nexport default About","import React from 'react'\n\nconst Contact = () => {\n  return (\n    <h1>Contact us page</h1>\n  )\n}\n\nexport default Contact","import React from 'react'\n\nconst Policy = () => {\n  return (\n    <h1> Terms and Policy</h1>\n  )\n}\n\nexport default Policy","import axios from 'axios'\n\nexport const registerUser = (user) =>async(dispatch) =>{\n    \n    dispatch({type:'REGISTER_USER_REQUEST'})\n    try {\n    const response = await axios.post('/api/users/register',user);\n    \n    dispatch({type:'REGISTER_USER_SUCCESS',payload:response});\n    window.location.href = \"/login\"\n\n    } catch (error) {\n        dispatch({type:'REGISTER_USER_FAIL',payload:error})    \n    }\n}\n\nexport const loginUser = (user)=>async(dispatch,getState)=>{\n    dispatch({type:\"LOGIN_USER_REQUEST\"})\n    try {\n        const response = await axios.post(\"/api/users/login\",user)\n        dispatch({type:\"LOGIN_USER_SUCCESS\", payload:response.data})\n        localStorage.setItem(\n            \"currentUser\",\n            JSON.stringify(getState().loginReducer.currentUser)\n          );\n    window.location.href = \"/\";\n    } catch (error) {\n        dispatch({type:\"LOGIN_USER_FAIL\", payload:error})\n    }\n}\nexport const logoutUser = () => (dispatch) => {\n    console.log(\"logging out...\")\n    localStorage.removeItem(\"currentUser\");\n    window.location.href = \"/\";\n  };\n\n\nexport const getAllUsers = () => async (dispatch) => {\n    dispatch({ type: \"GET_USERS_REQUEST\" });\n    try {\n      const response = await axios.get(\"/api/users/getallusers\");\n      // console.log(response.data);\n      dispatch({ type: \"GET_USERS_SUCCESS\", payload: response.data });\n    } catch (err) {\n      dispatch({ type: \"GET_USERS_FAIL\", payload: err });\n    }\n  };\n  \n  export const deleteUser = (userid) => async (dispatch) => {\n    try {\n      await axios.post(\"/api/users/deleteuser\", { userid });\n      //swal(\"User Deleted Succss!\", \"success\");\n      window.location.reload();\n      // console.log(res);\n    } catch (error) {\n      //swal(\"Errro While Deleteing User\");\n    }\n  };","import React from 'react'\nimport { Navbar, Nav, Container,NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport {useSelector, useDispatch} from 'react-redux'\nimport { logoutUser } from '../actions/userAction'\n\nconst NavBar = () => {\n\n  const dispatch = useDispatch()\n  const cartState = useSelector((state)=>state.cartReducer)\n  const {currentUser} = useSelector((state)=>state.loginReducer)\n\n\n  return (\n    <>\n\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\n      <Container>\n        <Navbar.Brand href=\"/\">\n        <img src='../images/logo1.png' style={{height:\"50px\"}} alt=\"logo\"/>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"ms-auto\">\n          {currentUser?\n            (<LinkContainer to=\"/\">\n              <NavDropdown title={currentUser.name} id=\"basic-nav-dropdown\">\n\n              <LinkContainer to=\"/myorders\">\n                <NavDropdown.Item>My Orders</NavDropdown.Item>\n              </LinkContainer>\n                <NavDropdown.Item onClick={()=>{dispatch(logoutUser())}}>Log Out</NavDropdown.Item>\n            \n            </NavDropdown>\n            </LinkContainer>)\n          :\n            (<>\n            <LinkContainer to=\"/login\">\n                <Nav.Link >Login</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/register\">\n                <Nav.Link >Register</Nav.Link>\n            </LinkContainer>\n            </>\n            )\n          }\n            <LinkContainer to=\"/cart\">\n                <Nav.Link >Cart {cartState.cartItems.length}</Nav.Link>\n            </LinkContainer>\n            \n            </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n\n    </>\n  )\n}\n\nexport default NavBar","import axios from \"axios\"\nexport const getAllPizzas = ()=>async(dispatch)=>{\n    dispatch({type:\"GET_PIZZAS_REQUEST\"})\n    try {\n        const response = await axios.get(\"/api/pizzas/getAllPizzas\");\n        //will continue after the above request is successfully served at the pizzaRouter.js\n        dispatch({type:\"GET_PIZZAS_SUCCESS\", payload:response.data})\n    } catch (error) {\n        dispatch({type:\"GET_PIZZAS_FAIL\",payload:error})\n    }\n}\n\nexport const addPizza = (pizza) => async (dispatch) => {\n    dispatch({ type: \"ADD_PIZZAS_REQUEST\" });\n    try {\n      await axios.post(\"/api/pizzas/addpizza\", { pizza });\n      dispatch({ type: \"ADD_PIZZAS_SUCCESS\" });\n    } catch (err) {\n      dispatch({ type: \"ADD_PIZZAS_FAIL\", payload: err });\n    }\n  };\n  \n  export const getPizzaById = (pizzaId) => async (dispatch) => {\n    dispatch({ type: \"GET_PIZZABYID_REQUEST\" });\n    try {\n      const response = await axios.post(\"/api/pizzas/getpizzabyid\", { pizzaId });\n      dispatch({ type: \"GET_PIZZABYID_SUCCESS\", payload: response.data });\n    } catch (err) {\n      dispatch({ type: \"GET_PIZZABYID_FAIL\", payload: err });\n    }\n  };\n  export const updatePizza = (updatedPizza) => async (dispatch) => {\n    dispatch({ type: \"UPDATE_PIZZABYID_REQUEST\" });\n    try {\n      const response = await axios.post(\"/api/pizzas/updatepizza\", {\n        updatedPizza,\n      });\n      dispatch({ type: \"UPDATE_PIZZABYID_SUCCESS\", payload: response.data });\n      window.location.href = \"/admin/pizzalist\";\n    } catch (err) {\n      dispatch({ type: \"UPDATE_PIZZABYID_FAIL\", payload: err });\n    }\n  };\n  \n  export const deletePizza = (pizzaId) => async (dispatch) => {\n    try {\n      await axios.post(\"/api/pizzas/deletepizza\", { pizzaId });\n      //swal(\"Pizza Deleted Succss!\", \"success\");\n      window.location.href = \"/admin/pizzalist\";\n      \n    } catch (error) {\n      //swal(\"Errro While Deleteing Pizza\");\n    }\n  };\n  \n  export const filterPizza = (searchkey, category) => async (dispatch) => {\n    let filterdPizza;\n    dispatch({ type: \"GET_PIZZAS_REQUEST\" });\n    try {\n      const res = await axios.get(\"/api/pizzas/getAllPizzas\");\n      filterdPizza = res.data.filter((pizza) =>\n        pizza.name.toLowerCase().includes(searchkey)\n      );\n      if (category !== \"all\") {\n        filterdPizza = res.data.filter(\n          (pizza) => pizza.category.toLowerCase() === category\n        );\n      }\n      dispatch({ type: \"GET_PIZZAS_SUCCESS\", payload: filterdPizza });\n    } catch (error) {\n      dispatch({ type: \"GET_PIZZAS_FAIL\", payload: error });\n    }\n  };","import axios from \"axios\"\r\nexport const getAllStock = ()=>async(dispatch)=>{\r\n    dispatch({type:\"GET_STOCK_REQUEST\"})\r\n    try {\r\n        const response = await axios.get(\"/api/inventory/getAllStock\");\r\n        //will continue after the above request is successfully served at the pizzaRouter.js\r\n        dispatch({type:\"GET_STOCK_SUCCESS\", payload:response.data})\r\n    } catch (error) {\r\n        dispatch({type:\"GET_STOCK_FAIL\",payload:error})\r\n    }\r\n}\r\n","import axios from \"axios\"\n\nexport const addToCart = (pizza,quantity,variant,increment)=>async(dispatch,getState)=>{\n    var cartItem = {\n      name:pizza.name,\n      _id:pizza._id,\n      image:pizza.image,\n      variant:variant,\n      quantity:Number(quantity),\n      prices:pizza.prices,\n      price: pizza.prices[0][variant]*quantity,\n      description:pizza.description?pizza.description:\"\",  \n      ingredients:pizza.ingredients?pizza.ingredients:{},  \n    };\n    var stockobject;\n    if(pizza.ingredients)//custom pizza\n    {stockobject = {\n      base:pizza.ingredients[\"base\"], \n      sauce:pizza.ingredients[\"sauce\"], \n      cheese:pizza.ingredients[\"cheese\"], \n      veggies:pizza.ingredients[\"veggies\"], \n      qty:increment?-1*(quantity/quantity):(quantity/quantity)}\n    }\n\n    if(quantity<1)\n    {\n      dispatch({type:\"DELETE_FROM_CART\",payload:cartItem})\n    \n      if(pizza.ingredients)//custom pizza\n      {try {\n        \n        const response = stockobject?await axios.post(\"/api/inventory/updatestock\",stockobject):{};\n        response=response;\n        dispatch({type:\"ADD_TO_CART\",payload:cartItem})\n      } catch (error) {\n              console.log(\"error while updating stock..\"+error)  \n      }}\n    \n    }\n\n    else if(quantity>10)\n    {alert('Maximum quantity 10 per pizzas')\n    }\n\n    else{\n    //dispatch({type:\"ADD_TO_CART\",payload:cartItem})\n    \n\n        try {\n           \n          const response = stockobject?await axios.post(\"/api/inventory/updatestock\",stockobject):{};\n          \n          dispatch({type:\"ADD_TO_CART\",payload:cartItem})\n        } catch (error) {\n                console.log(\"error while updating stock..\"+error)  \n        }\n    }\n\n\n    localStorage.setItem(\n        \"cartItems\",\n        JSON.stringify(getState().cartReducer.cartItems)\n      );\n    // STORING THE CART ITEMS in browsers local storage\n    //syntax : localStorage.setItem(key, value);\n    //value must be a JSON String\n}\n\nexport const deleteFromCart = (pizza,quantity,variant) =>async(dispatch,getState)=>{\n  dispatch({type:\"DELETE_FROM_CART\",payload:pizza})\n  \n  if(pizza.ingredients)//custom pizza\n      {\n        \n        var stockobject = {\n          base:pizza.ingredients[\"base\"], \n          sauce:pizza.ingredients[\"sauce\"], \n          cheese:pizza.ingredients[\"cheese\"], \n          veggies:pizza.ingredients[\"veggies\"], \n          qty:quantity}\n        \n        \n        \n        try {\n         \n        const response = stockobject?await axios.post(\"/api/inventory/updatestock\",stockobject):{};\n        \n      } catch (error) {\n              console.log(\"error while updating stock..\"+error)  \n      }}\n\n\n\n\n  localStorage.setItem(\n    \"cartItems\",\n    JSON.stringify(getState().cartReducer.cartItems)\n  );\n}","import React,{useState} from 'react'    //react is default exported, useState hook is not default so in {}\nimport { Card, Button, Row, Col } from 'react-bootstrap'\nimport Modal from 'react-bootstrap/Modal';\n\nimport {addToCart} from '../actions/cartAction'\nimport {useDispatch} from 'react-redux'\n\nconst Pizza = ({pobj}) => {\n  const [variant,setVariant]=useState('small')\n  const [quantity,setQuantity]=useState(1)\n\n  //const [state, setState] = useState(initialValue);\n  //state: This is the current value of the state variable. You can access it like any other variable.\n  //setState: This is a function sed to update the state value. When you call setState(newValue), it will update the state to the new Value you provide.\n  \n  //similarly creating for modal\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  const dispatch = useDispatch();\n\n  \n  const addToCartHandler =()=>{\n    console.log(\"clicked\")\n    const increment = true;\n    dispatch(addToCart(pobj,quantity,variant,increment))\n  }\n  //this handler function dispatches the addtocart action when the button is clicked\n\n  return (\n    <><Card style={{ width: '18rem' }}>\n      <Card.Img variant=\"top\" src={pobj.image} style={{width:'100%', height:'150px'}} onClick={handleShow}/>\n      <Card.Body>\n        <Card.Title>{pobj.name}</Card.Title>\n        <Card.Text>\n          {pobj.description}\n        </Card.Text>\n        <Card.Text>\n          <Row>\n            <Col md={6}>\n                variants\n\n                <br/>\n                <select onChange={e=>setVariant(e.target.value)}>\n                    {pobj.variants.map(variant=>(\n\n                        <option value={variant}>{variant}</option>\n\n                    ))}\n                </select>\n            </Col>\n            \n            <Col md={6}>\n                quantity\n                    \n                <br/>\n                <select onChange={e=>setQuantity(e.target.value)}>\n                    { //using curly braces because it is a js code\n                      [...Array(10).keys()].map(i=>(\n                        //the Array(10).keys() part returns an iterator object \n                        //hence we expand it to a new array using ...\n                        <option value={i+1}>{i+1}</option>\n                    ))}\n                </select>\n            </Col>\n          </Row>\n        </Card.Text>\n        <Row>\n          <Col md={6}>Price : Rs {pobj.prices[0][variant]*quantity}/-</Col>\n          <Col md={6}><Button variant=\"primary\" onClick={addToCartHandler}>Add to cart</Button></Col>\n        </Row>\n        \n      </Card.Body>\n    </Card>\n    \n    { //WE CAN ADD OTHER JS FUNCTIONS HERE IF NEEDED\n      //BEFORE THE END OF FRAGMENT </>\n    }\n\n    <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{pobj.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <img src={pobj.image} alt=\"\" style={{height:\"250px\", width:\"100%\"} }></img>\n          DESCRIPTION: \n        {pobj.description}\n        \n        </Modal.Body>\n        <Modal.Footer>\n          \n          \n        </Modal.Footer>\n      </Modal>\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    </>\n  )\n}\n\nexport default Pizza","import React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\n\nimport { Container, Row, Col } from 'react-bootstrap'\n\n//Data imported\n//use this for static data import=> import AllPizza from '../pizza-data'//returns array of pizzas that acts as a temporary database\n\n//OR\nimport{getAllPizzas} from '../actions/pizzaAction' \nimport { getAllStock } from '../actions/inventoryAction'\n//componenets imported\nimport Pizza from '../components/Pizza' //pizza card in which data is sent as props\n\n\nconst HomeScreen = () => {\n\n    const dispatch = useDispatch()\n    useEffect(()=>{\n        dispatch(getAllPizzas())//dispatch action\n    }, [dispatch])\n\n    useEffect(()=>{\n        dispatch(getAllStock())//dispatch action\n    }, [dispatch])\n\n\n\n    const pizzastate = useSelector((state)=>state.getAllPizzasReducer)//getting pizza state using useSelector\n    const {pizzas,loading,error}=pizzastate //destructuring state\n    \n    return (\n    <>\n        <Container>\n            {loading? <h1>loading....</h1>\n                        :error? <h1>Error while loading data</h1>\n                            :\n                        \n                        <Container>\n                        <Row>\n                            <a href=\"/custom\">\n                            <img src=\"/images/home_custom_banner.png\" style={{\"width\":\"100%\"}}></img>\n                            </a>   \n                        </Row>\n                        <Row>\n                            {pizzas.map(pizza=>(//callback function pizza=>(...)\n                                <Col md={4} style={{marginBottom:\"2%\", marginTop:\"2%\"}}>\n                                    <Pizza pobj = {pizza}/> \n                                </Col>\n                                //array.map(x=>(x+1)) example of array .map function for incrementing all elements by 1\n                                //iterates over an array\n                                //takes a call back function i=>() as argument\n                                //here i is each element of the array\n                                //(..) part defines operation to be performed for each element i\n\n                                //NOTE: JS in JSX requires <>{}</> but JSX in JS can be written directly using <></>\n\n                                //Here we are passing each pizza JS element in JSX componenet <Pizza>\n                                //Therefore <Pizza pobj={pizza}>\n                            ))}\n                        </Row>\n                        </Container>\n            }\n        </Container>\n    </>\n  )\n}\n\nexport default HomeScreen","import React from 'react'\nimport useRazorpay from \"react-razorpay\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {createOrder} from '../actions/orderAction'\nimport { Button } from 'react-bootstrap';\n\nconst Checkout = ({subTotal}) => {\n    \n\n    const loginState=useSelector((state)=>state.loginReducer)\n    const {currentUser} = loginState\n    console.log(currentUser)\n    //currentUser?window.location.href=\"/login\":console.log()\n    \n\n    const dispatch = useDispatch()\n    const cartState=useSelector((state)=>state.cartReducer)\n    const {cartItems} = cartState\n    //\n    //const stock = useSelector((state)=>state.getAllStockReducer);\n    //console.log(\" Recieved stock state on reaching checkout page..\",stock)    \n\n\n    const orderHandler=(razorpay_payment_id,cartItems,subTotal)=>{\n      dispatch(createOrder(razorpay_payment_id,cartItems,subTotal))\n      //window.location.href = \"/myorders\"\n    }\n\n\n    const Razorpay = useRazorpay();\n    const handlePayment = () => {\n        //const order = await createOrder(params);\n        \n        \n        if(currentUser==null)\n        {\n          window.location.href=\"/login\"\n        }\n\n\n      const options= {\n      \n        key: \"rzp_test_bYZoWApMjNP1Ln\",\n        amount: subTotal*100,\n        currency: \"INR\",\n        name: \"Pizza Shop\",\n        description: \"Test Transaction\",\n        image: \"../../images/logo.png\",\n        //order_id: \"12345\",\n        handler: (res) => {\n          orderHandler(res.razorpay_payment_id,cartItems,subTotal);\n         },\n        prefill: {\n          name: currentUser.name,\n          email: currentUser.email,\n          contact: \"\",\n        },\n        notes: {\n        },\n        theme: {\n          color: \"#3399cc\",\n        },\n      };\n  \n      const rzpay = new Razorpay(options);\n      rzpay.open();\n    }\n\n    return (\n      <div className=\"App\">\n        <Button onClick={handlePayment} >Proceed to checkout</Button>\n      </div>\n    );\n  \n}\n\nexport default Checkout","import axios from 'axios'\n\nexport const createOrder = (razorpay_payment_id,cartItems, subTotal) =>async(dispatch,getState)=>{\n    dispatch({type:\"ORDER_CREATE_REQUEST\"})\n    const loginState = getState().loginReducer\n    const {currentUser} = loginState\n    const order ={\n        name:currentUser.name,\n        email:currentUser.email,\n        userId:currentUser._id,\n        orderItems:cartItems,\n        orderAmount:subTotal,\n        isDelivered:false,\n        transactionId:razorpay_payment_id\n    }\n    try {\n        const response = await axios.post(\"/api/orders/placeOrder\",order)\n        dispatch({type: \"ORDER_CREATE_SUCCESS\",payload:response.data})\n    } catch (error) {\n        dispatch({type:\"ORDER_CREATE_FAIL\",payload:error})        \n    }\n\n    try {\n      const response = await axios.get(\"/api/inventory/getAllStock\");\n        //will continue after the above request is successfully served at the pizzaRouter.js\n        \n        dispatch({type:\"GET_STOCK_SUCCESS\", payload:response.data})\n        const {stock} = getState().getAllStockReducer\n        \n\n\n        //calculating LOW stock\n        var s=\"** STOCK ALERT ** The following stock is low : \\n\";\n\n        for(var i=0;i<stock.length;i++)\n        {\n          var type=stock[i].name;\n          s+=type+\" : \";\n          \n          var obj = stock[i].varqty[0];\n\n\n          for(var j=0;j<Object.keys(obj).length;j++)\n          {\n            var name = Object.keys(obj)[j];\n              \n            var value = obj[Object.keys(obj)[j]];\n            \n            if(value<=10 && value!=null)\n            {\n              s+=name+\"(\"+value+\") \";\n            }\n          }\n          s+=\"    \\n\";\n        }\n\n\n\n\n        //now sending mail for updated stock\n\n        \n        var mailobj = {\n          to : \"ekamjits105@gmail.com\",\n          subject : \"!! STOCK ALERT REPORT !!\",\n          text:s,\n        }\n\n        response =  await axios.post('/api/mail/sendmail',mailobj);\n        dispatch({ type: \"SEND_MAIL_SUCCESS\" });  \n        //empty the cart\n        \n        //localStorage.setItem(\"cartItems\",[])\n        //window.location.href=\"/myorders\"\n        \n    } catch (error) {\n        dispatch({type:\"ORDER_CREATE_FAIL\",payload:error})        \n    }\n\n    localStorage.setItem(\"cartItems\",[])\n    window.location.href='/cart'\n\n}\n\n\n\nexport const getMyOrders = () =>async(dispatch,getState)=>{\n \n    dispatch({type:\"GET_ORDER_REQUEST\"})\n    try {\n        const {currentUser} = getState().loginReducer\n       \n        const userId= currentUser._id\n        \n        const response = await axios.post(\"/api/orders/myOrders\",{userId})\n        \n        dispatch({type:\"GET_ORDER_SUCCESS\",payload:response.data})\n    } catch (error) {\n        dispatch({type:\"GET_ORDER_FAIL\",payload:error})\n        \n    }\n}\n\n\n\nexport const getAllOrders = () => async (dispatch, getState) => {\n    // const currentUser = getState().loginUserReducer.currentUser;\n    dispatch({\n      type: \"ALL_ORDER_REQUEST\",\n    });\n    try {\n      const response = await axios.get(\"/api/orders/alluserorder\");\n      dispatch({ type: \"ALL_ORDER_SUCCESS\", payload: response.data });\n    } catch (error) {\n      dispatch({ type: \"ALL_ORDER_FAIL\", payload: error });\n    }\n  };\n  \n  export const deliverOrder = (orderid) => async (dispatch, getState) => {\n    // const currentUser = getState().loginUserReducer.currentUser;\n    dispatch({\n      type: \"GET_ALL_ORDER_REQUEST\",\n    });\n    try {\n      await axios.post(\"/api/orders/deliverorder\", { orderid });\n      alert(\"Delivered Success\");\n      const orders = await axios.get(\"/api/orders/alluserorder\");\n      dispatch({ type: \"GET_ALL_ORDER_SUCCESS\", payload: orders.data });\n      window.location.href = \"/admin/orderlist\";\n    } catch (error) {\n      dispatch({ type: \"GET_ALL_ORDER_FAIL\", payload: error });\n    }\n  };\n  ","import React from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {Row, Col, Container} from 'react-bootstrap'\nimport { FaPlusCircle, FaMinusCircle,FaTrash} from \"react-icons/fa\";\nimport {addToCart, deleteFromCart} from '../actions/cartAction'\nimport Checkout from '../components/Checkout';\n\nconst CartScreen =()=>{\n    const dispatch = useDispatch();\n    const cartState = useSelector((state)=>state.cartReducer);\n    const cartItems = cartState.cartItems\n    //const [firstpizza, ...remainig] = cartItems\n    const subTotal = cartItems.reduce((x, item) => x + item.price, 0);\n\n    return(\n        <>\n            \n            <Container>\n                <Row style={{\"marginTop\":\"2%\"}}><Col md={7}>\n                <h1> My Cart</h1>\n                    <br/>\n                    {cartItems.length!=0?cartItems.map((item)=>(\n                        \n                        <Row style={{backgroundColor:'lightgrey', margin:'2%', padding:'2%'}}>\n                        <Col md={7}>\n                            <h4>{item.name} ({item.variant})</h4>\n                            {item.name===\"Custom Fresh pizza\"?<h6>Description: <br></br>{item.description}</h6>:<h1></h1>}\n                            <h5>Quantity : &nbsp;\n                            \n                            <FaPlusCircle style={{cursor:'pointer'}} onClick={()=>{dispatch(addToCart(item,item.quantity+1,item.variant,true))}}/> \n\n                            &nbsp;{item.quantity}&nbsp;\n\n                            <FaMinusCircle style={{cursor:'pointer'}} onClick={()=>{dispatch(addToCart(item,item.quantity-1,item.variant,false))}}/></h5>\n                            \n                            <h5>Price : {item.prices[0][item.variant]}/- X {item.quantity}</h5><h4>Rs {item.price}/-</h4>\n                        \n                        \n                        </Col>\n                        <Col md={4}>\n                        <img src={item.image} alt=\"\" style={{width:'150px', height:'100px'}}></img>\n                        </Col>\n                        <Col md={1}>\n                        <FaTrash style={{cursor:'pointer'}} onClick={()=>{dispatch(deleteFromCart(item,item.quantity,item.variant))}}/>\n                        </Col>\n                    </Row>\n                        \n\n                    )):<h2 style={{\"margin-top\":\"10%\"}}><center>OOPS! Your Cart is empty <br></br><h4> Go to <a href=\"/myorders\"> My Orders </a> to check your orders</h4></center></h2>}\n                    \n                </Col>\n                \n                \n                \n                \n                <Col md={5}>\n                <h1> Payment Info</h1> \n                <br/><hr></hr>\n                <h3>Subtotal = Rs {subTotal}/-</h3>\n                <br/>\n                <span style={{\"color\":\"grey\"}}>Make the payment via multiple options available including net banking, credit/debit cards/wallets and UPI</span>\n                <br></br><br></br>\n                <Checkout subTotal = {subTotal}> Proceed to checkout </Checkout>\n                <br></br>\n                <span style={{\"color\":\"green\"}}>Get your orders delivered fresh in 30 minutes! <br></br>**Conditions apply</span>\n                \n                </Col>\n                </Row>\n\n            </Container>\n\n       </>\n    )\n}\nexport default CartScreen","import React from 'react'\nimport axios from 'axios'\nimport {Form, Container, Button} from 'react-bootstrap'\nimport {useState} from 'react'\nimport {loginUser, registerUser} from '../actions/userAction'\nimport {useSelector, useDispatch } from 'react-redux'\n\nconst RegisterScreen = () => {\n    const [name,setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmpassword, setConfirmPassword] = useState('')\n    \n    const [exists,setExists] = useState(true);\n    const [checked,setChecked] = useState(false);\n    const [OTP, setOTP] = useState('');\n    const [verified, setVerified] = useState(false);\n    const [matched, setMatched] = useState(false);\n\n\n    const dispatch = useDispatch()\n    const registerState = useSelector((state) => state.registerReducer);\n    const { success } = registerState;\n    \n    const registerHandler = async() =>{\n    \n        if(password!==confirmpassword)\n        {\n            alert(\"paswords do not match!\")\n        }\n        else{\n\n        //CHECK IF USER ALREADY EXISTS\n\n        const reqobj = {\n          email:email\n        }\n        var response = await axios.post(\"/api/users/finduser\",reqobj);\n        setExists(response.data.exists);\n        setChecked(true);\n\n        if(!response.data.exists)\n        {\n          var x = Math.floor(Math.random()*1000000);\n          x=x.toString();\n          var mailobj = {\n              to:email,\n              subject:\"PizzaHut: OTP for account verification\",\n              text:\"Your OTP for account verification is : \"+x\n          }\n          response = await axios.post(\"/api/mail/sendmail\",mailobj);\n\n\n          const OTPobj={email:email,OTP:x};\n              \n          response = await axios.post(\"/api/users/saveOTP\",OTPobj);\n        }\n\n        }\n   }\n\n\n\n   const OTPMatcher = async() =>{\n    const OTPobj={email:email,OTP:OTP};\n        \n    var response = await axios.post(\"/api/users/validateOTP\",OTPobj);\n    var {matched}=response.data;\n    if(matched)\n    {\n\n        const user = {name,email,password}\n        alert(\"Congratulations! New Account created Successfully. Check your mail for credentials.\")\n\n        dispatch(registerUser(user))\n        var mailobj = {\n            to:email,\n            subject:\"PizzaHut: Congratulations on creating a new account!\",\n            text:\"Your Account password is : \"+password+\". Keep it safe and enjoy shopping!\"\n        }\n          \n        response = await axios.post(\"/api/mail/sendmail\",mailobj);\n        setMatched(true);\n        user = {email,password}\n        \n    }\n    setVerified(true);\n}\n    \n\n return (\n    <>\n    \n    \n    <Container>\n    \n    {exists?\n    \n      <Form>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter Name\" value={name} onChange={(e)=>setName(e.target.value)}/>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">  \n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e)=>setEmail(e.target.value)}/>\n        \n          \n        {email!=='' && checked && exists ?\n        <Form.Text className=\"text-muted\">Email already exists</Form.Text>\n        :\n        <Form.Text className=\"text-muted\">We'll never share your email with anyone else.\n        </Form.Text>}\n\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={(e)=>setPassword(e.target.value)}/>\n      </Form.Group> \n      <Form.Group className=\"mb-3\" controlId=\"formBasicConfirmPassword\">\n        <Form.Label>Confirm Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Confirm Password\" value={confirmpassword} onChange={(e)=>setConfirmPassword(e.target.value)}/>\n      </Form.Group>\n      \n      <Button variant=\"primary\" onClick={registerHandler}>\n        Send OTP\n      </Button>\n    </Form>\n    \n    : //does not exist\n    <Container style={{textAlign:\"center\"}}><center>{!matched?<Form style={{width:\"50%\", textAlign:\"center\"}}>\n        <center><br></br><br></br><h5 style={{\"color\":\"lightgreen\"}}>OTP sent to email successfully</h5></center>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\"><br></br>\n            <Form.Control type=\"text\" placeholder=\"Enter OTP\" value={OTP} onChange={(e)=>setOTP(e.target.value)}/>\n        </Form.Group>\n            {OTP!=='' && verified && !matched ?<Form.Text className=\"text-muted\">\n            OTP does not match\n            </Form.Text>:<h1></h1>}\n            <Button variant=\"primary\" onClick={OTPMatcher}>\n            Register\n            </Button>\n            </Form>\n        :   <>\n\n            </>\n        }</center></Container>\n    \n    }\n    \n    </Container>\n    </>\n  )\n}\n\nexport default RegisterScreen","import React,{useState} from 'react'\nimport {Form, Container, Button} from 'react-bootstrap'\nimport { loginUser } from '../actions/userAction'\nimport { useSelector,useDispatch } from 'react-redux'\n\n\nconst LoginScreen = () => {\n\n  const {success,error}=useSelector((state)=>state.loginReducer)\n\n  const dispatch = useDispatch(\"\")\n  const [email, setEmail]=useState(\"\")\n  const [password, setPassword]=useState(\"\")\n\n  const loginHandler=()=>{\n    const user = {email,password}\n    dispatch(loginUser(user))\n    success?alert('Successfully logged in'):error?alert(\"error in logging in\",error):console.log()\n  }\n\n  return (\n    <><br></br><br></br>\n    <Container style={{width:\"30%\"}}>\n    <h3> Login with your credentials</h3><br></br>\n    <Form>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e)=>setEmail(e.target.value)}/>\n        <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={(e)=>setPassword(e.target.value)}/>\n      </Form.Group>\n     \n      <a href=\"/reset-password\">Forgot password</a>\n      <br></br><br></br>\n      <Button variant=\"primary\" onClick={loginHandler}>\n        Submit\n      </Button>\n    </Form>\n    </Container>\n    </>\n  );\n}\n\n\nexport default LoginScreen","import React, { useEffect } from 'react'\nimport { useSelector,useDispatch } from 'react-redux'\nimport { getMyOrders } from '../actions/orderAction'\nimport {Container, Row, Col} from 'react-bootstrap' \n\nconst OrdersScreen = () => {\n    \n    const dispatch = useDispatch();\n    \n    const orderState = useSelector((state)=>state.myOrdersReducer)\n    const {orders} =orderState \n    useEffect(() => {\n        dispatch(getMyOrders())\n      }, [dispatch]);  \n\n    \nreturn (\n    <> <h1 className=\"text-center \">Your Orders </h1>\n    \n    {orders &&\n      orders.map((order) => (\n        <div className=\"container border p-4 bg-light\">\n       <Container>\n          <Row>\n            <Col md={4}>\n              <h4>Items :</h4>\n              {order.orderItems.map((item) => (\n                <h5 key={item.name}>\n                 {item.name} ({item.variant}) x {item.quantity} ={\" \"}\n                            \n                 \n                  Rs {item.price}/-\n                  {item.name===\"Custom Fresh pizza\"?<h6>Description: <br></br>{item.description}</h6>:<h1></h1>}\n                 \n                </h5>\n              ))}\n            </Col>\n            <Col md={3}>\n            </Col>\n            <Col md={5}>\n              <h4>Order Info :</h4>\n              <h6>Order id : {order._id}</h6>\n              <h6>Order Amount : Rs {order.orderAmount}/-</h6>\n              <h6>Transaction id : {order.transactionId}</h6>\n              <h5>Status : {order.isDelivered?<>Delivered</>:<>Not delivered</>}</h5>\n            </Col>\n          </Row>\n          </Container>\n        </div>\n      ))}\n  </>\n  )\n}\n\nexport default OrdersScreen","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst Loader = () => {\n  return <Spinner animation=\"border\" variant=\"info\" />;\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\nconst Error = ({ error }) => {\n  return <Alert variant=\"danger\">{error}</Alert>;\n};\n\nexport default Error;\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\nconst Success = ({ success }) => {\n  return <Alert variant=\"success\">{success}</Alert>;\n};\n\nexport default Success;\n","import React, { useState } from \"react\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { addPizza } from \"../../actions/pizzaAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"./../Loader\";\nimport Error from \"./../Error\";\nimport Success from \"./../Success\";\nconst AddNewPizza = () => {\n  const [name, setname] = useState(\"\");\n  const [smallPrice, setsmallPrice] = useState();\n  const [largprice, setlargprice] = useState();\n  const [mediumPrice, setmediumPrice] = useState();\n  const [image, setimage] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [category, setcategory] = useState(\"\");\n\n  const addPizzaState = useSelector((state) => state.addPizzaReducer);\n  const { loading, error, success } = addPizzaState;\n\n  const dispatch = useDispatch();\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    const pizza = {\n      name,\n      image,\n      description,\n      category,\n      prices: {\n        small: smallPrice,\n        medium: mediumPrice,\n        larg: largprice,\n      },\n    };\n    dispatch(addPizza(pizza));\n  };\n  return (\n    <div>\n      {loading && <Loader />}\n      {error && <Error error=\"add new pizza error\" />}\n      {success && <Success success=\"Pizza Added Successfully\" />}\n      <Form onSubmit={submitForm} className=\"bg-light p-4\">\n        <Row className=\"mb-3\">\n          <Form.Group as={Col} controlId=\"formGridEmail\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={name}\n              onChange={(e) => setname(e.target.value)}\n              placeholder=\"Enter email\"\n            />\n          </Form.Group>\n          <Row className=\"mb-3 mt-3\">\n            <Form.Group as={Col} controlId=\"formGridCity\">\n              <Form.Label>Small Price</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={smallPrice}\n                onChange={(e) => setsmallPrice(e.target.value)}\n                placeholder=\"Enter Small Price\"\n              />\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridState\">\n              <Form.Label>Medium Price</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={mediumPrice}\n                onChange={(e) => setmediumPrice(e.target.value)}\n                placeholder=\"Enter medium price\"\n              />\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridZip\">\n              <Form.Label>Larg Price</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={largprice}\n                onChange={(e) => setlargprice(e.target.value)}\n                placeholder=\"Enter larg price\"\n              />\n            </Form.Group>\n          </Row>\n          <Form.Group as={Col} controlId=\"formGridPassword\">\n            <Form.Label>Image</Form.Label>\n            <Form.Control\n              ttype=\"text\"\n              value={image}\n              onChange={(e) => setimage(e.target.value)}\n              placeholder=\"Add Image URL\"\n            />\n          </Form.Group>\n        </Row>\n\n        <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={description}\n            onChange={(e) => setdescription(e.target.value)}\n            placeholder=\"Enter Description\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formGridAddress2\">\n          <Form.Label>Category</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={category}\n            onChange={(e) => setcategory(e.target.value)}\n            placeholder=\"Enter Category\"\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Add New\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default AddNewPizza;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deliverOrder, getAllOrders } from \"./../../actions/orderAction\";\nimport { Table, Button } from \"react-bootstrap\";\nimport Loader from \"./../Loader\";\nimport Error from \"./../Error\";\nconst OrderList = () => {\n  const allOrdersState = useSelector((state) => state.allUserOrdersReducer);\n  const { loading, orders, error } = allOrdersState;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllOrders());\n  }, [dispatch]);\n  return (\n    <div>\n      <h1>Order Lists</h1>\n      {loading && <Loader />}\n      {error && <Error error=\"Admin Order req fail\" />}\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Order Id</th>\n            <th>Email</th>\n            <th>Transaction ID</th>\n            <th>Amount</th>\n            <th>Date</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {orders &&\n            orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.email}</td>\n                <td>{order.transactionId}</td>\n                <td>Rs {order.orderAmount}/-</td>\n                <td>{order.createdAt}</td>\n                <td>\n                  {\" \"}\n                  {order.isDelivered ? (\n                    <h6 className=\"text-success\">Delivered</h6>\n                  ) : (\n                    <>\n                      <Button\n                        className=\"btn-danger\"\n                        onClick={() => {\n                          dispatch(deliverOrder(order._id));\n                        }}\n                      >\n                        Deliver\n                      </Button>\n                    </>\n                  )}{\" \"}\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default OrderList;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AiFillEdit, AiFillDelete } from \"react-icons/ai\";\nimport { Table } from \"react-bootstrap\";\nimport { deletePizza, getAllPizzas } from \"../../actions/pizzaAction\";\nimport Loader from \"../../components/Loader\";\nimport Error from \"../../components/Error\";\nimport { Link } from \"react-router-dom\";\n\nconst Pizzaslist = () => {\n  const dispatch = useDispatch();\n  const pizzastate = useSelector((state) => state.getAllPizzasReducer);\n  const { loading, pizzas, error } = pizzastate;\n  console.log(pizzas);\n  useEffect(() => {\n    dispatch(getAllPizzas());\n  }, [dispatch]);\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Error>Error while fetching pizzas {error}</Error>\n      ) : (\n        <div>\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th>Image</th>\n                <th>Pizza Name</th>\n                <th>Prices</th>\n                <th>Category</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {pizzas &&\n                pizzas.map((pizza) => (\n                  <tr>\n                    <td><center>\n                      <img\n                        src={pizza.image}\n                        alt=\"logo\"\n                        width=\"60%\"\n                        height=\"120px\"\n                      /></center>\n                    </td>\n                    <td>{pizza.name}</td>\n                    <td>\n                      Small : {pizza.prices[0][\"small\"]}\n                      <br />\n                      Medium : {pizza.prices[0][\"medium\"]}\n                      <br />\n                      Large : {pizza.prices[0][\"large\"]}\n                    </td>\n                    <td>{pizza.category}</td>\n                    <td>\n                      <Link to={`/admin/editpizza/${pizza._id}`}>\n                        <AiFillEdit style={{ cursor: \"pointer\" }} />\n                      </Link>\n                      &nbsp;\n                      <AiFillDelete\n                        style={{ color: \"red\", cursor: \"pointer\" }}\n                        onClick={() => {\n                          dispatch(deletePizza(pizza._id));\n                        }}\n                      />\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </Table>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Pizzaslist;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { Table } from \"react-bootstrap\";\nimport { deleteUser, getAllUsers } from \"../../actions/userAction\";\nimport Loader from \"./../Loader\";\nimport Error from \"./../Error\";\n\nconst Userlist = () => {\n  const userState = useSelector((state) => state.getAllUsersReducer);\n  const { loading, error, users } = userState;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllUsers());\n  }, [dispatch]);\n  return (\n    <div>\n      <h1>User List</h1>\n      {loading && <Loader />}\n      {error && <Error error=\"Error While Fetching Users\" />}\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>User ID</th>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users &&\n            users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>{user.email}</td>\n                <td>\n                  <AiFillDelete\n                    style={{ color: \"red\", cursor: \"pointer\" }}\n                    onClick={() => {\n                      dispatch(deleteUser(user._id));\n                    }}\n                  />\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default Userlist;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPizzaById, updatePizza } from \"../../actions/pizzaAction\";\nimport Loader from \"./../Loader\";\nimport Error from \"./../Error\";\n\nconst EditPizza = ({ match }) => {\n  const [name, setname] = useState(\"\");\n  const [smallPrice, setsmallPrice] = useState();\n  const [largeprice, setlargeprice] = useState();\n  const [mediumPrice, setmediumPrice] = useState();\n  const [image, setimage] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [category, setcategory] = useState(\"\");\n  const dispatch = useDispatch();\n  const getPizzaByState = useSelector((state) => state.getPizzaByIdReducer);\n  const { error, pizza } = getPizzaByState;\n  const updatePizzaState = useSelector((state) => state.updatePizzaByIdReducer);\n  const { updateloading } = updatePizzaState;\n  useEffect(() => {\n    if (pizza) {\n      if (pizza._id === match.params.pizzaId) {\n        setname(pizza.name);\n        setdescription(pizza.description);\n        setcategory(pizza.category);\n        setimage(pizza.image);\n        setsmallPrice(pizza.prices[0][\"small\"]);\n        setmediumPrice(pizza.prices[0][\"medium\"]);\n        setlargeprice(pizza.prices[0][\"large\"]);\n      } else {\n        dispatch(getPizzaById(match.params.pizzaId));\n      }\n    } else {\n      dispatch(getPizzaById(match.params.pizzaId));\n    }\n  }, [pizza, dispatch, match.params.pizzaId]);\n  const submitForm = (e) => {\n    e.preventDefault();\n    const updatedPizza = {\n      _id: match.params.pizzaId,\n      name,\n      image,\n      description,\n      category,\n      prices: {\n        small: smallPrice,\n        medium: mediumPrice,\n        large: largeprice,\n      },\n    };\n    dispatch(updatePizza(updatedPizza));\n  };\n  return (\n    <div>\n      {updateloading && <Loader />}\n      {error && <Error error=\"add new pizza error\" />}\n      {/* {success && <Success success=\"Pizza Added Successfully\" />} */}\n      <Form onSubmit={submitForm} className=\"bg-light p-4\">\n        <Row className=\"mb-3\">\n          <Form.Group as={Col} controlId=\"formGridEmail\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={name}\n              onChange={(e) => setname(e.target.value)}\n              placeholder=\"Enter email\"\n            />\n          </Form.Group>\n          <Row className=\"mb-3 mt-3\">\n            <Form.Group as={Col} controlId=\"formGridCity\">\n              <Form.Label>Small Price</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={smallPrice}\n                onChange={(e) => setsmallPrice(parseInt(e.target.value))}\n                placeholder=\"Enter Small Price\"\n              />\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridState\">\n              <Form.Label>Medium Price</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={mediumPrice}\n                onChange={(e) => setmediumPrice(parseInt(e.target.value))}\n                placeholder=\"Enter medium price\"\n              />\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridZip\">\n              <Form.Label>Large Price</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={largeprice}\n                onChange={(e) => setlargeprice(parseInt(e.target.value))}\n                placeholder=\"Enter large price\"\n              />\n            </Form.Group>\n          </Row>\n          <Form.Group as={Col} controlId=\"formGridPassword\">\n            <Form.Label>Image</Form.Label>\n            <Form.Control\n              ttype=\"text\"\n              value={image}\n              onChange={(e) => setimage(e.target.value)}\n              placeholder=\"Add Image URL\"\n            />\n          </Form.Group>\n        </Row>\n\n        <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={description}\n            onChange={(e) => setdescription(e.target.value)}\n            placeholder=\"Enter Description\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formGridAddress2\">\n          <Form.Label>Category</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={category}\n            onChange={(e) => setcategory(e.target.value)}\n            placeholder=\"Enter Category\"\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Update Pizza\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default EditPizza;\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {Table} from 'react-bootstrap'\r\nimport { getAllStock } from '../../actions/inventoryAction'\r\n\r\nconst Inventory = () => {\r\n    const {stock} = useSelector((state) => state.getAllStockReducer);\r\n  \r\n    const dispatch = useDispatch()\r\n    useEffect(()=>{\r\n        dispatch(getAllStock())//dispatch action\r\n    }, [dispatch]);\r\n  \r\n  \r\n  \r\n    return (\r\n    \r\n    <>\r\n    <h1>Inventory</h1>\r\n    <br></br>\r\n\r\n    {stock && stock.map((item) => (\r\n      \r\n    <div>\r\n    <h1>{item.name}</h1>\r\n          \r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Variant</th>\r\n                <th>Price</th>\r\n                <th>Quantity</th>\r\n                <th>Warning</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {[...Array(item.variants.length)].map((x,i) =>\r\n            (\r\n                \r\n                 <tr>\r\n                    <td>\r\n                    \r\n                    {item.variants[i]}\r\n                    </td>\r\n\r\n                    <td>\r\n                    {item.prices[0][item.variants[i]]}\r\n                    </td>\r\n                    \r\n                    <td>\r\n                    {item.varqty[0][item.variants[i]]}\r\n                     \r\n                    </td>\r\n                    <td>\r\n                    {item.varqty[0][item.variants[i]]<=10?<h4 style={{\"color\":\"red\"}}>LOW</h4>:<h5 style={{\"color\":\"green\"}}>Sufficient</h5>\r\n                                     \r\n                    }</td>\r\n                    \r\n                  </tr>\r\n               ))}\r\n            </tbody>\r\n          </Table>\r\n      \r\n        </div>\r\n\r\n        ))} \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Inventory\r\n\r\n\r\n","import React, { useEffect } from \"react\";\nimport { Row, Col, Container, Button, ButtonGroup } from \"react-bootstrap\";\nimport { useSelector} from \"react-redux\";\nimport { Switch, Route } from \"react-router-dom\";\nimport AddNewPizza from \"../components/Admin/AddNewPizza\";\nimport OrderList from \"../components/Admin/OrderList\";\nimport Pizzaslist from \"../components/Admin/Pizzaslist\";\nimport Userlist from \"../components/Admin/Userlist\";\nimport EditPizza from \"./../components/Admin/EditPizza\";\nimport Inventory from \"../components/Admin/Inventory\";\n\nconst AdminScreen = ({ history }) => {\n  const userState = useSelector((state) => state.loginReducer);\n  const { currentUser } = userState;\n  useEffect(() => {\n    if (localStorage.getItem(\"currentUser\") === null || !currentUser.isAdmin) {\n      window.location.href = \"/\";\n    }\n  }, [currentUser]);\n\n\n\n  return (\n    <>\n      <Container>\n        <Row>\n          <h1 className=\"text-center bg-dark text-light p-2\">Admin Panel</h1>\n          <Col md={2}>\n            <ButtonGroup vertical style={{ minHeight: \"400px\" }}>\n              \n              <Button onClick={() => history.push(\"/admin/orderlist\")}>\n                All Orders\n              </Button>\n              <Button onClick={() => history.push(\"/admin/userlist\")}>\n                All Users\n              </Button>\n              <Button onClick={() => history.push(\"/admin/inventory\")}>\n                Inventory\n              </Button>\n              <Button onClick={() => history.push(\"/admin/pizzalist\")}>\n                All Pizzas\n              </Button>\n              <Button onClick={() => history.push(\"/admin/addnewpizza\")}>\n                Add New Pizza\n              </Button>\n              \n            </ButtonGroup>\n          </Col>\n          <Col md={10}>\n            <Switch>\n              <Route path=\"/admin\" component={Userlist} exact />\n              <Route path=\"/admin/userlist\" component={Userlist} exact />\n              <Route\n                path=\"/admin/editpizza/:pizzaId\"\n                component={EditPizza}\n                exact\n              />\n              <Route path=\"/admin/pizzalist\" component={Pizzaslist} exact />\n              <Route path=\"/admin/inventory\" component={Inventory} exact />\n              <Route path=\"/admin/addnewpizza\" component={AddNewPizza} exact />\n              <Route path=\"/admin/orderlist\" component={OrderList} exact />\n            </Switch>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default AdminScreen;\n","import React,{useEffect, useState} from 'react'\r\nimport {Container, Row, Col, Button} from 'react-bootstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getAllStock } from '../actions/inventoryAction'\r\nimport { addToCart } from '../actions/cartAction'\r\n\r\nconst CustomScreen = () => {\r\n    \r\n    var loadings = true;\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(()=>{\r\n        console.log(\"dispatching..\")\r\n        dispatch(getAllStock())//dispatch action\r\n    }, [dispatch])\r\n    \r\n    \r\n    const stockstate = useSelector((state)=>state.getAllStockReducer)//getting pizza state using useSelector\r\n    const {stock, loading, error} = stockstate;\r\n    loadings=loading;\r\n    console.log(\"Recieved Stock...\")\r\n    console.log(stock)\r\n    console.log(stock[0])\r\n\r\n    const addToCartHandler =()=>{\r\n        console.log(\"clicked\")\r\n/*\r\n        var cartItem = {\r\n            name:pizza.name,\r\n            _id:pizza._id,\r\n            image:pizza.image,\r\n            variant:variant,\r\n            quantity:Number(quantity),\r\n            prices:pizza.prices,\r\n            price: pizza.prices[0][variant]*quantity,  \r\n          };\r\n      */if(stock[0])\r\n        var tprice = stock[0].prices[0][base]+stock[1].prices[0][sauce]+stock[2].prices[0][cheese]+stock[3].prices[0][veggies];\r\n        var pobj = {\r\n            name:\"Custom Fresh pizza\",\r\n            _id:Math.random(),\r\n            image:\"/images/custom.jpg\",\r\n            prices:[{\"medium\":tprice}],\r\n            description:\"Base : \"+base+\", Sauce : \"+sauce+\", Cheese : \"+cheese+\", Topping : \"+veggies,\r\n            ingredients:{\"base\":base,\"sauce\":sauce,\"cheese\":cheese,\"veggies\":veggies}\r\n        }\r\n        var variant=\"medium\";\r\n        dispatch(addToCart(pobj,1,variant,true))\r\n      }\r\n\r\n    //const [variant,setVariant]=useState('small')\r\n    //const [quantity,setQuantity]=useState(1)\r\n    \r\n\r\n    const [base,setBase]=useState('classic')\r\n    const [sauce,setSauce]=useState('classic')\r\n    const [cheese,setCheese]=useState('mozzerella')\r\n    const [veggies,setVeggies]=useState('corn')\r\n    \r\n    \r\n  \r\n    return (\r\n    <>\r\n    \r\n    <br></br>\r\n        <Container>\r\n        {loadings? <h1>loading....</h1>\r\n                        :error? <h1>Error while loading data</h1>\r\n                            :\r\n            \r\n            \r\n            <Container>\r\n            <h1>Create your Custom Pizza</h1>\r\n                <Row >\r\n\r\n                    <Col md={4} style={{\"padding\":\"2%\"}}>\r\n                    \r\n                    <img src = \"/images/custom_side_img.jpg\" style={{\"width\":\"100%\"}}></img>\r\n                    \r\n                    \r\n                    </Col>\r\n                    \r\n\r\n\r\n\r\n                    <Col md={8} style={{\"padding\":\"4%\", \"border\": \"2px solid red\"}}>\r\n                     \r\n                    Select base &nbsp;&nbsp;\r\n                        <select onChange={e=>setBase(e.target.value)}>\r\n                        {stock[0] && stock[0].variants.map(variant=>(\r\n\r\n                        <option value={variant}>{variant}</option>\r\n\r\n                            ))}                \r\n                        </select>\r\n\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                        Select sauce &nbsp;&nbsp;\r\n                        <select onChange={e=>setSauce(e.target.value)}>\r\n                        {stock[1] && stock[1].variants.map(variant=>(\r\n\r\n                        <option value={variant}>{variant}</option>\r\n\r\n                            ))}                \r\n                        </select>\r\n\r\n                        <br></br>\r\n                            <br></br>\r\n\r\n                            Select cheese&nbsp;&nbsp;\r\n                        <select onChange={e=>setCheese(e.target.value)}>\r\n                        {stock[2] && stock[2].variants.map(variant=>(\r\n\r\n                        <option value={variant}>{variant}</option>\r\n\r\n                            ))}                \r\n                        </select>\r\n\r\n                            \r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n\r\n                        Select veggies &nbsp;&nbsp;\r\n                        <select onChange={e=>setVeggies(e.target.value)}>\r\n                        {stock[3] && stock[3].variants.map(variant=>(\r\n\r\n                        <option value={variant}>{variant}</option>\r\n\r\n                            ))}                \r\n                        </select>\r\n\r\n                        <br></br>\r\n                            <br></br>\r\n\r\n                        <hr></hr>\r\n                        <br></br>\r\n\r\n                        <Row>\r\n                                <Col md={6}>\r\n                            {!stock[0]?(<h1></h1>):(\r\n                                <>\r\n                                <h3>Chosen Ingredients</h3>\r\n                                Base : {base} = Rs {stock[0].prices[0][base]} /- &nbsp; \r\n                                <br></br> Sauce : {sauce} = Rs {stock[1].prices[0][sauce]} /- &nbsp;\r\n                                <br></br> Cheese : {cheese} = Rs {stock[2].prices[0][cheese]} /- &nbsp; \r\n                                <br></br>Topping : {veggies} = Rs {stock[3].prices[0][veggies]} /- &nbsp;                        \r\n                            <br></br>\r\n                            <br></br>\r\n                                <h3>Price : {stock[0].prices[0][base]+stock[1].prices[0][sauce]+stock[2].prices[0][cheese]+stock[3].prices[0][veggies]}</h3>  \r\n                            <br></br>\r\n                            </>\r\n                            )}\r\n                                \r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    \r\n                                    <Button onClick={addToCartHandler}>Add to Cart</Button>\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n        \r\n            </Container>\r\n        }\r\n                    <br></br>        \r\n\r\n\r\n        </Container>\r\n\r\n\r\n\r\n    </>\r\n    \r\n    \r\n    )\r\n}\r\n\r\nexport default CustomScreen","import React, {useState} from 'react'\r\nimport { Container, Form, Button } from 'react-bootstrap'\r\nimport axios from 'axios';\r\n\r\nconst ResetScreen = () => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [exists,setExists] = useState(false);\r\n    const [checked,setChecked] = useState(false);\r\n    const [OTP, setOTP] = useState('');\r\n    const [verified, setVerified] = useState(false);\r\n    const [matched, setMatched] = useState(false);\r\n\r\n\r\n    const OTPHandler = async() =>{\r\n\r\n        //sending API Request directly from here rather than making an action and reducer\r\n        const reqobj = {\r\n            email:email\r\n        }\r\n        var response = await axios.post(\"/api/users/finduser\",reqobj);\r\n        setExists(response.data.exists);\r\n        setChecked(true);\r\n\r\n        //sending OTP\r\n        if(response.data.exists)\r\n        {\r\n        var x = Math.floor(Math.random()*1000000);\r\n        x=x.toString();\r\n        var mailobj = {\r\n            to:email,\r\n            subject:\"PizzaHut: OTP for account verification\",\r\n            text:\"Your OTP for account verification is : \"+x\r\n        }\r\n        response = await axios.post(\"/api/mail/sendmail\",mailobj);\r\n\r\n\r\n        const OTPobj={email:email,OTP:x};\r\n            \r\n        response = await axios.post(\"/api/users/saveOTP\",OTPobj);\r\n        }  \r\n    }\r\n\r\n    const OTPMatcher = async() =>{\r\n        const OTPobj={email:email,OTP:OTP};\r\n            \r\n        var response = await axios.post(\"/api/users/validateOTP\",OTPobj);\r\n        var {matched, password}=response.data;\r\n        if(matched)\r\n        {\r\n            var mailobj = {\r\n                to:email,\r\n                subject:\"PizzaHut: Password for re-login\",\r\n                text:\"Your Account password is : \"+password+\". Keep it safe and enjoy shopping!\"\r\n            }\r\n            response = await axios.post(\"/api/mail/sendmail\",mailobj);\r\n            setMatched(true);\r\n        }\r\n        setVerified(true);\r\n    }\r\n\r\n  return (\r\n  \r\n  <>\r\n    \r\n    <Container style={{\"width\":\"30%\", \"margin-top\":\"5%\",\"border\":\"1px solid lightgrey\",\"padding\":\"2%\"}}>\r\n    <h3>Reset your Password</h3>\r\n    <br></br><br></br>\r\n    \r\n    {!exists?\r\n    \r\n    <Form>\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e)=>setEmail(e.target.value)}/>\r\n      </Form.Group>\r\n        {email!=='' && checked && !exists ?<Form.Text className=\"text-muted\">\r\n          Email does not exist\r\n        </Form.Text>:<h1></h1>}\r\n      <Button variant=\"primary\" onClick={OTPHandler}>\r\n        SendOTP\r\n      </Button>\r\n    </Form>\r\n    :\r\n        <Container>{!matched?<Form>\r\n        <center><h5 style={{\"color\":\"lightgreen\"}}>OTP sent to email successfully</h5></center>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\"><br></br>\r\n            <Form.Control type=\"text\" placeholder=\"Enter OTP\" value={OTP} onChange={(e)=>setOTP(e.target.value)}/>\r\n        </Form.Group>\r\n            {OTP!=='' && verified && !matched ?<Form.Text className=\"text-muted\">\r\n            OTP does not match\r\n            </Form.Text>:<h1></h1>}\r\n            <Button variant=\"primary\" onClick={OTPMatcher}>\r\n            Send password on mail\r\n            </Button>\r\n            </Form>\r\n        :   <>\r\n            {alert('Password sent on mail')}\r\n            {window.location.href=\"/login\"}\r\n\r\n            </>\r\n        }</Container>\r\n    }\r\n    </Container>\r\n\r\n\r\n\r\n\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default ResetScreen","import \"./App.css\";\nimport TopBar from \"./components/TopBar\"\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\n\nimport About from \"./components/About\"\nimport Contact from \"./components/Contact\";\nimport Policy from \"./components/Policy\";\nimport NavBar  from \"./components/NavBar\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport OrdersScreen from \"./screens/OrdersScreen\";\nimport AdminScreen from \"./screens/AdminScreen\";\nimport CustomScreen from \"./screens/CustomScreen\";\nimport ResetScreen from \"./screens/ResetScreen\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <TopBar/>\n      <NavBar/>\n      <Switch>\n        \n       \n        <Route path=\"/admin\" component={AdminScreen} />\n        <Route path=\"/about\" component={About} exact/>\n        <Route path=\"/contact\" component={Contact} exact/>\n        <Route path=\"/policy\" component={Policy} exact/>\n        <Route path=\"/cart\"  component={CartScreen} exact/>\n        <Route path=\"/\" component={HomeScreen} exact />\n        <Route path=\"/custom\" component={CustomScreen} exact />\n        <Route path=\"/register\" component={RegisterScreen} exact/>\n        <Route path=\"/login\" component={LoginScreen} exact/>\n        <Route path=\"/myorders\" component={OrdersScreen} exact/>\n        <Route path=\"/reset-password\" component={ResetScreen} exact/>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { combineReducers} from \"redux\"\nimport {configureStore} from '@reduxjs/toolkit'\nimport thunk from \"redux-thunk\"\n\nimport{getAllPizzasReducer,\n    addPizzaReducer,\n    getPizzaByIdReducer,\n    updatePizzaByIdReducer} from \"./reducers/pizzaReducer\"\nimport {cartReducer} from \"./reducers/cartReducer\"\nimport { registerReducer, loginReducer,\n    getAllUsersReducer, } from \"./reducers/userReducer\"\nimport { placeOrderReducer,myOrdersReducer,\n    allUserOrdersReducer, } from \"./reducers/orderReducer\"\nimport { getAllStockReducer } from \"./reducers/inventoryReducer\"\nimport { mailerReducer } from \"./reducers/mailReducer\"\n\nconst rootReducer = combineReducers({\n    getAllPizzasReducer:getAllPizzasReducer,\n    cartReducer:cartReducer,\n    registerReducer:registerReducer,\n    loginReducer:loginReducer,\n    placeOrderReducer:placeOrderReducer,\n    myOrdersReducer:myOrdersReducer,\n    addPizzaReducer: addPizzaReducer,\n    getPizzaByIdReducer: getPizzaByIdReducer,\n    updatePizzaByIdReducer: updatePizzaByIdReducer,\n    allUserOrdersReducer: allUserOrdersReducer,\n    getAllUsersReducer: getAllUsersReducer,\n    getAllStockReducer :getAllStockReducer , \n    mailerReducer:mailerReducer,\n});\n\nconst cartItems = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\nconst currentUser = localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')) : null\n\n//if there is some data then convert it into JSON array else leave it as an emty array\n//we need to convert because while storing in local storage we had converted it into JSON string for browser\n\nconst initialstate={\n\n    cartReducer : {\n        cartItems : cartItems\n    },\n\n    loginReducer :{\n        currentUser : currentUser\n    },\n\n}\n\n\nconst middleware = [thunk];\nconst store = configureStore({\nreducer:rootReducer, preloadedState:initialstate, middleware:middleware\n})\nexport default store;"," export const getAllPizzasReducer = (state={pizzas:[]}, action)=>{\n    switch(action.type)\n    {\n        case \"GET_PIZZAS_REQUEST\":\n            return{\n                ...state, \n                loading:true\n            };\n        case \"GET_PIZZAS_SUCCESS\":\n            return{\n                pizzas:action.payload, \n                loading:false\n            };\n        case \"GET_PIZZAS_FAIL\":\n                return{\n                    error:action.payload, \n                    loading:false\n                };\n        default:\n            return state;\n    }\n }\n\n\nexport const addPizzaReducer = (state = {}, action) => {\n    switch (action.type) {\n      case \"ADD_PIZZAS_REQUEST\":\n        return {\n          ...state,\n          loading: true,\n        };\n      case \"ADD_PIZZAS_SUCCESS\":\n        return {\n          success: true,\n          loading: false,\n        };\n      case \"ADD_PIZZAS_FAIL\":\n        return {\n          loading: false,\n          error: action.payload,\n        };\n      default:\n        return state;\n    }\n  };\n  export const getPizzaByIdReducer = (state = {}, action) => {\n    switch (action.type) {\n      case \"GET_PIZZABYID_REQUEST\":\n        return {\n          ...state,\n          loading: true,\n        };\n      case \"GET_PIZZABYID_SUCCESS\":\n        return {\n          pizza: action.payload,\n          loading: false,\n        };\n      case \"GET_PIZZABYID_FAIL\":\n        return {\n          loading: false,\n          error: action.payload,\n        };\n      default:\n        return state;\n    }\n  };\n  export const updatePizzaByIdReducer = (state = {}, action) => {\n    switch (action.type) {\n      case \"UPDATE_PIZZABYID_REQUEST\":\n        return {\n          ...state,\n          loading: true,\n        };\n      case \"UPDATE_PIZZABYID_SUCCESS\":\n        return {\n          updatesuccess: true,\n          updateloading: false,\n        };\n      case \"UPDATE_PIZZABYID_FAIL\":\n        return {\n          updateloading: false,\n          updateerror: action.payload,\n        };\n      default:\n        return state;\n    }\n  };","export const cartReducer = (state = {cartItems:[]},action)=>{\n    switch(action.type)\n    {\n        case \"ADD_TO_CART\":\n            /*if(action.payload.name===\"Custom Fresh pizza\"){\n                console.log(\"name matched\")\n                return{\n                    ...state,\n                    cartItems:[...state.cartItems, action.payload]\n                };\n            }*/\n            const alreadyexists=state.cartItems.find(\n                (item)=>(item._id===action.payload._id && item.variant===action.payload.variant)\n            )\n            if(alreadyexists)\n            {\n                console.log(\"name not matched\")\n                return{\n                    ...state,\n                    cartItems: state.cartItems.map((item) =>\n                    (item._id === action.payload._id && item.variant===action.payload.variant)? action.payload : item)\n                    //update the item according to id, else copy all items as it is\n                }\n            }\n            else{    \n                return{\n                    ...state,\n                    cartItems:[...state.cartItems, action.payload]\n                };\n            }\n\n        case \"DELETE_FROM_CART\":\n            return{\n                ...state,\n                cartItems:state.cartItems.filter((item)=>(\n                    (item._id !== action.payload._id || item.variant!==action.payload.variant)\n                ))\n            };\n        default: return state;\n    }\n}","\nexport const registerReducer = (state={},action) => {\n    switch(action.type){\n    case 'REGISTER_USER_REQUEST':\n        return{\n            loading:true\n        };\n    case 'REGISTER_USER_SUCCESS':\n        return{\n            loading:false,\n            success:true\n        };\n    case 'REGISTER_USER_FAIL':\n        return{\n            error:action.payload\n        };\n    default : return state;\n    \n    }\n}\n\nexport const loginReducer =(state={},action)=>{\n    switch(action.type)\n    {\n        case \"LOGIN_USER_REQUEST\":\n            return{\n                loading:true\n            };\n        case \"LOGIN_USER_SUCCESS\":\n            return{\n                loading:false,\n                success:true,\n                currentUser:action.payload\n            };\n        case \"LOGIN_USER_FAIL\":\n            return{\n                error:action.payload\n            };\n        default : return state;\n    }\n}\n\nexport const getAllUsersReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n      case \"GET_USERS_REQUEST\":\n        return {\n          ...state,\n          loading: true,\n        };\n      case \"GET_USERS_SUCCESS\":\n        return {\n          users: action.payload,\n          loading: false,\n        };\n      case \"GET_USERS_FAIL\":\n        return {\n          error: action.payload,\n          loading: false,\n        };\n      default:\n        return state;\n    }\n  };\n  \n","\nexport const placeOrderReducer = (state={},action) => {\n  switch(action.type){\n    case \"ORDER_CREATE_REQUEST\":\n        return{loading:true};\n    case \"ORDER_CREATE_SUCCESS\":\n            return{loading:false,success:true};\n    case \"ORDER_CREATE_FAIL\":\n            return{error:action.payload};\n    default : return state\n    }\n}\n\nexport const myOrdersReducer = (state={orders:[]},action) => {\n       \n        switch(action.type){\n          case \"GET_ORDER_REQUEST\":\n              return{loading:true};\n          case \"GET_ORDER_SUCCESS\":\n                  return{\n                loading:false,\n                success:true,\n                orders:action.payload\n        };\n          case \"GET_ORDER_FAIL\":\n                  return{error:action.payload};\n          default : return state;\n          }\n      }\n\n\n      export const allUserOrdersReducer = (state = { orders: [] }, action) => {\n        switch (action.type) {\n          case \"ALL_ORDER_REQUEST\":\n            return {\n              loading: true,\n              ...state,\n            };\n          case \"ALL_ORDER_SUCCESS\":\n            return {\n              loading: false,\n              success: true,\n              orders: action.payload,\n            };\n          case \"ALL_ORDER_FAIL\":\n            return {\n              loading: false,\n              error: action.payload,\n            };\n          default:\n            return state;\n        }\n      };","export const getAllStockReducer = (state={stock:[]}, action)=>{\r\n    switch(action.type)\r\n    {\r\n        case \"GET_STOCK_REQUEST\":\r\n            return{\r\n                ...state, \r\n                loading:true\r\n            };\r\n        case \"GET_STOCK_SUCCESS\":\r\n            return{\r\n                stock:action.payload, \r\n                loading:false\r\n            };\r\n        case \"GET_STOCK_FAIL\":\r\n                return{\r\n                    error:action.payload, \r\n                    loading:false\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n }\r\n\r\n/*\r\nexport const addPizzaReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case \"ADD_PIZZAS_REQUEST\":\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n        };\r\n      case \"ADD_PIZZAS_SUCCESS\":\r\n        return {\r\n          success: true,\r\n          loading: false,\r\n        };\r\n      case \"ADD_PIZZAS_FAIL\":\r\n        return {\r\n          loading: false,\r\n          error: action.payload,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  export const getPizzaByIdReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case \"GET_PIZZABYID_REQUEST\":\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n        };\r\n      case \"GET_PIZZABYID_SUCCESS\":\r\n        return {\r\n          pizza: action.payload,\r\n          loading: false,\r\n        };\r\n      case \"GET_PIZZABYID_FAIL\":\r\n        return {\r\n          loading: false,\r\n          error: action.payload,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  export const updatePizzaByIdReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case \"UPDATE_PIZZABYID_REQUEST\":\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n        };\r\n      case \"UPDATE_PIZZABYID_SUCCESS\":\r\n        return {\r\n          updatesuccess: true,\r\n          updateloading: false,\r\n        };\r\n      case \"UPDATE_PIZZABYID_FAIL\":\r\n        return {\r\n          updateloading: false,\r\n          updateerror: action.payload,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };*/","export const mailerReducer = (state={},action) => {\r\n    switch(action.type){\r\n      case \"MAIL_SEND_REQUEST\":\r\n          return{loading:true};\r\n      case \"MAIL_SEND_SUCCESS\":\r\n              return{loading:false,success:true};\r\n      case \"MAIL_SEND_FAIL\":\r\n              return{error:action.payload};\r\n      default : return state\r\n      }\r\n  }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Testing from \"./testing\";\n\n\nimport {Provider} from \"react-redux\"\nimport store from \"./store\"\n\nReactDOM.render(\n  <Provider store={store}>\n   <App />\n    {/*<Testing/>*/}\n    </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}